https://leetcode.com/problems/n-ary-tree-postorder-traversal/
//
/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
private:  vector<int>  res;

public:
    vector<int> postorder(Node* root) {//In a N-ary tree, postorder means traverse the subtree rooted at its children first and then visit the root node itself.
      traversal(root);
        return res;   
    }
    
     
    void traversal (Node* root){
        if (root==nullptr)     return;    
        for (auto child:root->children){
            traversal(child);
        }
        res.push_back(root->val); 
    }
};
